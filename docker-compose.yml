version: '3.8'

services:
  mongo1:
    image: mongodb/mongodb-community-server
    container_name: mongo1
    command: mongod --config /etc/mongod.conf
    ports:
      - 27017:27017
    volumes:
      - ./mongod.conf:/etc/mongod.conf  # Mount external config file
      - mongo1_data:/data/db
    networks:
      - mongo-network
    restart: always

  mongo2:
    image: mongodb/mongodb-community-server
    container_name: mongo2
    command: mongod --config /etc/mongod.conf
    ports:
      - 27018:27017
    volumes:
      - ./mongod.conf:/etc/mongod.conf
      - mongo2_data:/data/db
    networks:
      - mongo-network
    restart: always

  mongo3:
    image: mongodb/mongodb-community-server
    container_name: mongo3
    command: mongod --config /etc/mongod.conf
    ports:
      - 27019:27017
    volumes:
      - ./mongod.conf:/etc/mongod.conf
      - mongo3_data:/data/db
    networks:
      - mongo-network
    restart: always

  mongo-init:
    image: mongodb/mongodb-community-server
    container_name: mongo-init
    restart: on-failure
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-network
    command: >
      bash -c '
        echo "Waiting for MongoDB instances to start..."
        sleep 30

        until mongosh --host mongo1:27017 --eval "db.runCommand({ ping: 1 })"; do
            echo "Waiting for MongoDB..."
            sleep 5
        done

        echo "Initializing replica set..."
        mongosh --host mongo1:27017 --eval "
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo1:27017\" },
              { _id: 1, host: \"mongo2:27017\" },
              { _id: 2, host: \"mongo3:27017\" }
            ]
          });
        "

        echo "Waiting for replica set to become PRIMARY..."
        sleep 15

        echo "Creating admin user..."
        mongosh --host mongo1:27017 --eval "
          db = db.getSiblingDB(\"admin\");
          db.createUser({
            user: \"admin\",
            pwd: \"GaRZlBke2r6Q9sJ\",
            roles: [{ role: \"root\", db: \"admin\" }]
          });
        "

        echo "Creating user for lifeBots database..."
        mongosh --host mongo1:27017 --eval "
          db = db.getSiblingDB(\"lifeBots\");
          db.createUser({
            user: \"admin\",
            pwd: \"GaRZlBke2r6Q9sJ\",
            roles: [
              { role: \"readWrite\", db: \"lifeBots\" },
              { role: \"dbAdmin\", db: \"lifeBots\" }
            ]
          });
        "

        echo "MongoDB replica set initialized with users"
      '

networks:
  mongo-network:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
